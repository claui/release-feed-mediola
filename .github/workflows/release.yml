name: Create a release

on:
  workflow_dispatch:
    inputs:
      target_version:
        description: |-
          New version number for the release (or a Poetry bump rule)
        required: true

jobs:
  bump-version:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out source tree
        uses: actions/checkout@v3

      - name: Load cached Poetry installation
        id: load-cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-release-v${{ env.CI_POETRY_VERSION }}

      - name: Update PATH
        if: steps.load-cached-poetry.outputs.cache-hit == 'true'
        run: |
          echo ~/.local/bin >> "${GITHUB_PATH}"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        if: steps.load-cached-poetry.outputs.cache-hit != 'true'
        with:
          version: ${{ env.CI_POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Print current package version
        run: poetry version --no-ansi --no-interaction

      - name: Bump package version
        env:
          TARGET_VERSION: ${{ inputs.target_version }}
        run: poetry version --no-ansi --no-interaction "${TARGET_VERSION}"

      - name: Gather bumped package version
        run: |
          env -i >> "${GITHUB_ENV}" \
            "NEW_VERSION=$(poetry version --no-ansi --no-interaction --short)"

      - name: Print bumped package version
        run: |
          echo "New package version: ${NEW_VERSION}"

      # Workaround for https://github.com/actions/runner/issues/667
      # See also:
      # https://gist.github.com/swinton/03e84635b45c78353b1f71e41007fc7c
      - name: Commit bumped package version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILE_TO_COMMIT: pyproject.toml
          VERSION_BUMP_BRANCH: version-bump/${{ env.NEW_VERSION }}
        run: |
          set -ex
          MESSAGE="Bump version to ${NEW_VERSION}"
          BASE_REF_SHA="$(git rev-parse @)"
          OBJECT_SHA=$(git rev-parse ":${FILE_TO_COMMIT}")
          gh api --method POST '/repos/:owner/:repo/git/refs' \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            --field ref="refs/heads/${VERSION_BUMP_BRANCH}" \
            --field sha="${BASE_REF_SHA}"
          gh api --method PUT "/repos/:owner/:repo/contents/${FILE_TO_COMMIT}" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            --field message="${MESSAGE}" \
            --field content=@<(base64 -i "${FILE_TO_COMMIT}") \
            --field branch="${VERSION_BUMP_BRANCH}" \
            --field sha="${OBJECT_SHA}"

  ci-checks:
    needs: bump-version
    uses: ./.github/workflows/ci.yml

  release:
    needs: ci-checks
    runs-on: ubuntu-22.04
    steps:
      - name: Check out source tree
        uses: actions/checkout@v3
